name: Calendar Versioning Tag (Test)

on:
  push:
    branches:
      - "**"

jobs:
  tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up GPG key
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          KEY_ID=$(gpg --list-secret-keys --with-colons | grep '^sec' | cut -d: -f5)
          echo "GPG_KEY_ID=$KEY_ID" >> "$GITHUB_ENV"
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Configure Git and GPG
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.signingkey "$GPG_KEY_ID"
          git config --global commit.gpgsign true
          git config --global tag.gpgSign true
        env:
          GPG_KEY_ID: ${{ env.GPG_KEY_ID }}

      - name: Get formatted date (YYYY.MM.DD)
        id: get-date
        run: echo "date=$(date -u '+%Y.%m.%d')" >> "$GITHUB_OUTPUT"

      - name: Fetch all tags
        run: git fetch --tags

      - name: Determine next tag version
        id: get-next-tag
        run: |
          DATE_PREFIX=${{ steps.get-date.outputs.date }}
          EXISTING_TAGS=$(git tag -l "${DATE_PREFIX}.*" | sort)
          COUNT=$(echo "$EXISTING_TAGS" | grep -c . || true)
          VERSION=$(printf "%02d" $COUNT)
          TAG="${DATE_PREFIX}.${VERSION}"
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"

      - name: Update package.json version
        run: |
          TAG_VERSION="${{ steps.get-next-tag.outputs.tag }}"
          jq --arg v "$TAG_VERSION" '.version = $v' package.json > tmp.json && mv tmp.json package.json
          git add package.json
          git commit -m "chore: update package.json version to $TAG_VERSION"
          git push origin HEAD
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push signed tag
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "$GPG_PASSPHRASE" | \
            gpg --batch --yes --pinentry-mode loopback --passphrase-fd 0 \
            --local-user "$GPG_KEY_ID" \
            -ab

          git tag -s ${{ steps.get-next-tag.outputs.tag }} \
            -m "Calendar version tag ${{ steps.get-next-tag.outputs.tag }}" \
            --local-user "$GPG_KEY_ID" \
            --force

          git push origin ${{ steps.get-next-tag.outputs.tag }}
