name: Test Calendar Versioning and Package Update

on:
  # Change to manual trigger for testing
  workflow_dispatch:
    inputs:
      test_branch:
        description: "Branch to test on"
        required: true
        default: "test-version-pipeline"

jobs:
  tag-and-update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.test_branch }} # Use the specified test branch
          token: ${{ secrets.RELEASE_PAT }}

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true

      - name: Configure Git
        run: |
          git config --global user.name "Pritish Budhiraja"
          git config --global user.email "pritish.budhiraja@gmail.com"

      - name: Get formatted date (YYYY.MM.DD)
        id: get-date
        run: echo "date=$(date -u '+%Y.%m.%d')" >> "$GITHUB_OUTPUT"

      - name: Fetch all tags
        run: git fetch --tags

      - name: Determine next tag version
        id: get-next-tag
        run: |
          DATE_PREFIX=${{ steps.get-date.outputs.date }}
          EXISTING_TAGS=$(git tag -l "${DATE_PREFIX}.*" | sort)
          COUNT=$(echo "$EXISTING_TAGS" | grep -c . || true)
          VERSION=$(printf "%02d" $COUNT)
          TAG="${DATE_PREFIX}.${VERSION}-test"  # Add -test suffix for test tags
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          echo "Creating tag: $TAG"

      - name: Create temporary branch for package.json update
        run: |
          git checkout -b temp-version-update-branch

      - name: Update package.json
        run: |
          VERSION="${{ steps.get-next-tag.outputs.tag }}"
          # Use jq to update the version in package.json
          jq ".version = \"$VERSION\"" package.json > package.json.tmp
          mv package.json.tmp package.json

      - name: Commit package.json changes
        run: |
          git add package.json
          git commit -S -m "chore: update version to ${{ steps.get-next-tag.outputs.tag }} [skip ci]"

      - name: Create and push tag
        run: |
          # Create tag pointing to our new commit with updated package.json
          git tag -s "${{ steps.get-next-tag.outputs.tag }}" -m "${{ steps.get-next-tag.outputs.tag }}"
          git push origin "${{ steps.get-next-tag.outputs.tag }}"

      - name: Update test branch
        run: |
          # Instead of updating main, update the test branch
          git push origin temp-version-update-branch:${{ github.event.inputs.test_branch }} -f
